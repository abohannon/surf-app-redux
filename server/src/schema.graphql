# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
  currentUser: User!
  buoy(stationId: String!): [Buoy!]!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UpdateUserInput!): User!
  login(data: LoginUserInput!): AuthPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

type User {
  id: ID!
  name: String!
  email: String
  password: String!
  updatedAt: String!
  createdAt: String!
}

type Buoy {
  id: ID!
  date: String
  windDirection: String
  windSpeed: String
  waveHeight: String
  dominantWavePeriod: String
  averageWavePeriod: String
  meanWaveDirection: String
  airTemp: String
  waterTemp: String
  tide: String
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}